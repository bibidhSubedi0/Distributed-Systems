RPC (Remote Procedure Call)
-> RPC is a protocol that allows a program to cause a procedure to execute on another address space (commonly another computer or server) as if it were a local call
-> The client makes a call; the RPC framework serializes the request, sends it over the network, the server executes the function, and the result is sent back.
-> When you want to abstract network communication, making distributed function calls feel local.
-> JSON-RPC, XML-RPC, and gRPC (modern).

gRPC
-> A high-performance, open-source RPC framework developed by Google.
-> Uses HTTP/2 for transport, protobuf, polyglot and supports unary (single request/response), client/server streaming, and bidirectional streaming.

REST APIs
-> An architectural style for designing networked applications. RESTful APIs use HTTP to expose resources as URLs and allow interaction via standard HTTP methods (GET, POST, PUT, DELETE, etc.).
-> Each request contains all necessary information; the server does not store client context, Everything (users, products, etc.) is a resource identified by a URL.

Message Queues
-> Systems that allow asynchronous communication between distributed components via messages placed onto queues.
-> Producer: Sends messages to a queue. Queue: Temporarily holds messages until they are processed. Consumer: Reads messages from the queue and processes them.

RabbitMQ
-> Traditional message broker, Uses queues and exchanges for routing.

Kafka
-> Distributed log-based message queue (event streaming platform). Uses topics and partitions. Designed for high throughput, fault tolerance, and scalability.

Kafka is more about streaming/event sourcing, while RabbitMQ is about classic messaging.


Synchronous Communication
-> The sender waits for the receiver to process the request and respond before continuing.
-> Examples: RPC, gRPC (by default), HTTP REST calls.

Asynchronous Communication
-> The sender does not wait for the receiver. It sends a message and moves on, while the receiver processes the message when ready.
-> Examples: Message queues (RabbitMQ, Kafka), event-driven systems, email.